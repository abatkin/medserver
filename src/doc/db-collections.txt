== users ==
Store all users
{
	userName: string (indexed),
	fullName: string,
	permissions: [
		"permission1",
		...
	],
	preferences: [
		{name: "name", value: "value"},
		...
	]
}

== sessions ==
Store all actively-logged in sessions. These should probably be cached in memory
and the DB is only touched on a cache-miss, and the lastUpdatedAt are updated
in a batch every few minutes. That can also clear out any expired sessions.
{
	userId: id-of-user,
	createdAt: date,
	lastUpdatedAt: date
}
	
== configs ==
Store all configuration information for both server and clients
{
	configName: string (indexed),
	values: [
		{name: "name", values: ["value1", ...]},
		...
	]
}

== schemas ==
Form schema information. Patient schema has schemaName="patient"
{
	schemaName: string (indexed),
	schemaVersion: integer,
	active: boolean,
	fields: [
		{
			name: string,
			displayName: string,
			helpText: string,
			searchable: boolean,
			defaultValue: (depends on type),
			dataType: "string"|"integer"|"float"|"date"|"boolean"|"select"|"multiselect"|"table"|"form"|"forms"
			... additional metadata depending on type (see below) ...
		},
		...
	]
}

=== string ===
maxLength: integer
subType: "plain"|"multiline"|"url"|"email"
multiline also allows:
width: integer (cols)
height: integer (rows)

=== integer ===
min: integer
max: integer

=== float ===
min: float
max: float

=== date ===
allowPast: boolean
allowFuture: boolean

=== select ===
tableName: string (from lookuptables)
allowOther: boolean (allow other free text to be used)
typeAhead: boolean (whether it should be a regular dropdown, or a typeahead-style box)

=== multiselect ===
tableName: string (from lookuptables)
minSelections: integer
maxSelections: integer

=== table ===
columns: array of field values (no multiselect, table or forms allowed)
maxRows: integer

=== form ===
formType: string (from forms)

=== forms ===
titleFormat: string (magic text in the format "text ${field}" that can expand values from the form)
allowedFormTypes: array of string (from forms)

== lookuptables ==
Lookup tables that can be used by forms for select/multiselect fields
{
	tableName: string (indexed),
	values: [
		{value: "value", displayText: "text"},
		...
	]
}

== changelogs ==
Audit information on all changes to all patients or forms
{
	changeType: "add"|"delete"|"change",
	userId: id-of-user (indexed),
	timestamp: date,
	details: string,
	patentId: id-of-patient,
	formChanged: string (if it was a form, path to the form)
	valuesChanged: [
		{key: "key", oldValue: "old", newValue: "new"},
		...
	]
}

== patients ==
Stored separately from forms to allow for more efficient searching
{
	patientName: string (indexed),
	schemaVersion: integer,
	createdAt: date,
	lastUpdatedAt: date,
	attachmentPath: string,
	data: [
		{name: "name", value: "value"},
		... depends on schema ...
	]
}


== forms ==
{
	formId: id-of-schema,
	schemaVersion: integer,
	createdAt: date,
	lastUpdatedAt: date,
	patientId: id-of-patient (indexed)
	data: [
		{name: "name", value: "value"},
		... depends on schema ...
	]
}



